#include <gtest/gtest.h>

extern "C" {
  #include <crypto/util.h>
  #include <crypto/keys/keys.h>
}

TEST(Keys, LoadKey) {
  const char * hexKey = "308204A30201000282010100C6FA569D21345B4E5803B963FFC4ADBB93C9A77EFC935CEB060ABFD932EC49E9E662FB1E7FB1B8AC7C79BC446A0C0E8A7022C931F0CD27BAA6AF70CCBB1EAFD70063865FAA270FBD57DB7A28ADB6BA89F83123E971FFE2364A623393FB8173EEFD269DB7B10BA93CA214FB8D4CB53F0C31532F5D50EFE1540793CDAF6E826A50DC2B583FCF1C4B7127A3D55D2CE4CD7B62BF9EA042AD650B4455AAE8B5F9AABC08148D8CCD86636827EABD3A52910C7915FDCA4715A7295AE3DB06ED7981C16A5F76516DD9751ABD2CF1094FCE16B17E9DA6112BFAE6AD1745C5FB951AD67E13D3B309A8099703C621642501E612202F08C9B37E5A5A2EB0AF067C8A3BAADE2F020301000102820100729477C9F5F3FB5C2AECC2162693B063A2DFED96FF85306D9A461861CFA427900C7E151363FF0854333DBABF3EBE00A5919B46767EAEF4E0D3D995401FC4B5073F0F10B307FD845FC936F6AA741614671CC7D76137A75D315C361E7369D20ADBA565564F1021A1EBEB7DDFB96761BB939ED7C31F9E5AF44B7A2D8FB52512EE7AEBA279FB3666EC9448E2F622CED2C874E32DD0636F99EB1C312CDA12D05E96BDBDB3160EDE79CDA4519485E6A0DD140CAC7FD2EDA3EA0A8A973F79A2C37B40B7E07F5D6277444A5423FEF38BEE211A77C64E4E36F217B8AA9834397AF8E3BDB7C28CB4D3DC667F7B56DB768EB0B002E5F579CCDF4D8311C9286FB2B81A03010102818100EA18C9506984481944D9D94089F6C2A717EB60E995D6561B73D990F842C94F7E344A2FC2B7DCA8DCD3F381E43B68F17DA778361C62F24CF683BD09EE158886AAE98F9006BE444C72A312B46D1438B9955AEFA4EECC4BD54DBB0DB53D78C4B9F743772E618989F946E1DFD30E811E66AB7976C97695EDB69308E9F3E3B2CA20AF02818100D9985D3A6EBE64D39CD0F384D112D3B3D9801181160ABC8B607F2C2B2A13062B117083BFF25116B93766DB50D5BB80D2D286CDBDCDFF97457A74EEAD19929F35AC8A5184989E347B0D2CBE90C8CC13916C672CDA56AB89E09CFB67E0D6CE460801FEE0B10693DB133F2C1947EA0D4460B5F8824DDD5B69E3B090D23620D37A81028181009B1868E859C0467457656DC690A1683D845F7209D037FD3C9AF89E4F9D0FFB16C656106695A2204E8E2E5AF477580407181950E065BDDAB7C8784A47EF0451149341864EB16856ADECD4CBAD29249BF0141B89CE9C93F1725A67AE9857971F0E6F285B164C25997E18D04DE8E22ADE22E58A89D78365C6FC8B7F55129AB5C8090281801F34003A7EE302A66DD870F35CDFEC47E02AC357D587589E4C0A309548054E5F22B315D192B81A201957C09F88E6C88472F82DCCC81B9CDFB3BDCCF439B492EC297FF44CA56E1A6C82E925B2B178C25D9A43F9649E051F527C7078E6FF26B95830A1122B909BE7508D408FA78662BCA979AED750BF2B7AB5D1FE1286FC9217010281807DB5C244A897A54EC8EEE0D39BC575168F523A97D1DF75DA0C08C6D7EF3B02A9F626031B5A17086DD94108C1E3E8AA7E11B6B7EAD1C0C6CCB1AC3614DD3B1431A9C69BD18DEFA01A79309FC6B627122220DEF6E8B7291C8B23C42838775D78DA00FD88DF7C98D1EC2EC2A94A6A9F8A492F25A053C52F8191EE5BE9626BB6DF11";
  ProtobufCBinaryData key = fromHex(hexKey);
  ASSERT_TRUE(key.data);
  Libp2pPubKey * pubKey = unmarshal_public_key(key);
  ASSERT_TRUE(pubKey);
}